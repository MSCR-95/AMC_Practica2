package Visual;

import amc_practica2.AFND;
import amc_practica2.GestionFicheros;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JTable;
import javax.swing.JTextPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.BadLocationException;
import javax.swing.text.Style;
import javax.swing.text.StyleContext;
import javax.swing.text.StyledDocument;

/**
 *
 * @author Maria S
 */
public class VentanaAFND extends javax.swing.JFrame {

    private String nombreFichero;
    /*
    private String estadosFinales;
    private String estados;
    private String estadoInicial;
     */
    private boolean automataCargado = false;
    AFND aut;
    AFND autAux = new AFND();
    GestionFicheros gf = new GestionFicheros();

    public VentanaAFND() {

        initComponents();
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(new BorderLayout());

        PrintStream printStream = new PrintStream(new CustomOutputStream(texto));
        System.setOut(printStream);
        System.setErr(printStream);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        texto = new javax.swing.JTextPane();
        introducir_nombre = new javax.swing.JTextField();
        cargar_nombre = new javax.swing.JButton();
        transicionOrigen_txt = new javax.swing.JTextField();
        botonAñadirTransicion = new javax.swing.JButton();
        estados_text = new javax.swing.JTextField();
        botonAñadirEstados = new javax.swing.JButton();
        estadoInicial_text = new javax.swing.JTextField();
        botonAñadirEstadoInicial = new javax.swing.JButton();
        estadosFinales_txt = new javax.swing.JTextField();
        botonAñadirEstadosFinales = new javax.swing.JButton();
        boton_guardar = new javax.swing.JButton();
        cadena_text = new javax.swing.JTextField();
        boton_comprobar = new javax.swing.JButton();
        nuevoFicheroNombre_text = new javax.swing.JTextField();
        transicionSimbolo_text = new javax.swing.JTextField();
        transicionDestinos_texto = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        lamdaOrigen_txt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        lamdaDestinos_txt = new javax.swing.JTextField();
        boton_lamda = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jScrollPane2.setViewportView(texto);

        introducir_nombre.setText("Nombre fichero");

        cargar_nombre.setText("Cargar");
        cargar_nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargar_nombreActionPerformed(evt);
            }
        });

        transicionOrigen_txt.setText("origen");
        transicionOrigen_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transicionOrigen_txtActionPerformed(evt);
            }
        });

        botonAñadirTransicion.setText("Añadir");
        botonAñadirTransicion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAñadirTransicionActionPerformed(evt);
            }
        });

        estados_text.setText("Estados");
        estados_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estados_textActionPerformed(evt);
            }
        });

        botonAñadirEstados.setText("Añadir");
        botonAñadirEstados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAñadirEstadosActionPerformed(evt);
            }
        });

        estadoInicial_text.setText("Estado inicial");

        botonAñadirEstadoInicial.setText("Añadir");
        botonAñadirEstadoInicial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAñadirEstadoInicialActionPerformed(evt);
            }
        });

        estadosFinales_txt.setText("Estados finales");
        estadosFinales_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estadosFinales_txtActionPerformed(evt);
            }
        });

        botonAñadirEstadosFinales.setText("Añadir");
        botonAñadirEstadosFinales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAñadirEstadosFinalesActionPerformed(evt);
            }
        });

        boton_guardar.setText("Guardar");
        boton_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_guardarActionPerformed(evt);
            }
        });

        cadena_text.setText("cadena para comprobar");
        cadena_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadena_textActionPerformed(evt);
            }
        });

        boton_comprobar.setText("Comprobar");
        boton_comprobar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_comprobarActionPerformed(evt);
            }
        });

        nuevoFicheroNombre_text.setText("Nombre nuevo fichero");
        nuevoFicheroNombre_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoFicheroNombre_textActionPerformed(evt);
            }
        });

        transicionSimbolo_text.setText("simbolo");
        transicionSimbolo_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transicionSimbolo_textActionPerformed(evt);
            }
        });

        transicionDestinos_texto.setText("destinos");

        jLabel1.setText("Transiciones");

        lamdaOrigen_txt.setText("origen");
        lamdaOrigen_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lamdaOrigen_txtActionPerformed(evt);
            }
        });

        jLabel2.setText("Transiciones Lamda");

        lamdaDestinos_txt.setText("destinos");

        boton_lamda.setText("Añadir");
        boton_lamda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_lamdaActionPerformed(evt);
            }
        });

        jLabel3.setText("Comprobar cadena");

        jLabel4.setText("Guardar nuevo automata");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 914, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(38, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(estados_text, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(botonAñadirEstados))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(estadoInicial_text, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(botonAñadirEstadoInicial, javax.swing.GroupLayout.Alignment.TRAILING)))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(transicionOrigen_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(transicionSimbolo_text, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(transicionDestinos_texto, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lamdaOrigen_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(lamdaDestinos_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(31, 31, 31)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(boton_lamda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(botonAñadirTransicion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(estadosFinales_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(botonAñadirEstadosFinales, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(cadena_text, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(boton_comprobar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(boton_guardar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nuevoFicheroNombre_text, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(cargar_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(introducir_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(12, 12, 12))
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(47, 47, 47))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(estados_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(estadoInicial_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(estadosFinales_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(introducir_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(botonAñadirEstados)
                            .addComponent(botonAñadirEstadoInicial)
                            .addComponent(botonAñadirEstadosFinales)
                            .addComponent(cargar_nombre))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(transicionOrigen_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(transicionSimbolo_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(transicionDestinos_texto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botonAñadirTransicion))
                        .addGap(30, 30, 30)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lamdaOrigen_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lamdaDestinos_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(boton_lamda)
                            .addComponent(nuevoFicheroNombre_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(boton_guardar)
                            .addComponent(jLabel3)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cadena_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(boton_comprobar))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cargar_nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargar_nombreActionPerformed
        try {
            String nombre = introducir_nombre.getText();
            aut = gf.cargarAutomataAFND("src/amc_practica2/ficherosPruebas/" + nombre + ".txt");
            System.out.println(aut);    //Para pruebas
            imprimirEnJTableAFNDConLambda(jTable1, aut);
            automataCargado = true;
        } catch (Exception e) {
            System.out.println("Error: el automata no existe");
        }
    }//GEN-LAST:event_cargar_nombreActionPerformed

    private void transicionOrigen_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transicionOrigen_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_transicionOrigen_txtActionPerformed

    private void botonAñadirEstadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAñadirEstadosActionPerformed
        try {
            String estados = this.estados_text.getText();
            System.out.println("estados " + estados);
            autAux.añadirEstadosVisual(estados, autAux);
            System.out.println(autAux);    //Para pruebas **
        } catch (Exception e) {
            System.out.println("error al introducir los estados");
            Logger.getLogger(VentanaAFND.class.getName()).log(Level.SEVERE, null, e);
        }

    }//GEN-LAST:event_botonAñadirEstadosActionPerformed

    private void estados_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estados_textActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_estados_textActionPerformed

    private void estadosFinales_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estadosFinales_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_estadosFinales_txtActionPerformed

    private void botonAñadirEstadosFinalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAñadirEstadosFinalesActionPerformed
        try {
            String estadosFinales = this.estadosFinales_txt.getText();
            System.out.println("estados finales " + estadosFinales);
            autAux.añadirFinalesVisual(estadosFinales, autAux);
            System.out.println(autAux);    //Para pruebas ******
        } catch (Exception e) {
            System.out.println("error al introducir los estados finales");
            Logger.getLogger(VentanaAFND.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_botonAñadirEstadosFinalesActionPerformed

    private void cadena_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadena_textActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cadena_textActionPerformed

    private void nuevoFicheroNombre_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoFicheroNombre_textActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nuevoFicheroNombre_textActionPerformed

    private void botonAñadirEstadoInicialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAñadirEstadoInicialActionPerformed
        try {
            String estadoInicial = this.estadoInicial_text.getText();
            System.out.println("estado inicial " + estadoInicial);
            autAux.añadirInicialVisual(estadoInicial, autAux);
            System.out.println(autAux);    //Para pruebas****
        } catch (Exception e) {
            System.out.println("error al introducir el estado inicial");
            Logger.getLogger(VentanaAFND.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_botonAñadirEstadoInicialActionPerformed

    private void botonAñadirTransicionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAñadirTransicionActionPerformed
        try {
            String origen = this.transicionOrigen_txt.getText();
            String simbolo = this.transicionSimbolo_text.getText();
            String destinos = this.transicionDestinos_texto.getText();
            autAux.agregarSimbolo(simbolo);
            System.out.println("transicion " + origen + " " + simbolo + " " + destinos);
            ArrayList<String> destinosAux = (ArrayList<String>) autAux.añadirEstadosDestino(destinos);
            autAux.agregarTransicion(origen, simbolo,destinosAux);
            System.out.println(autAux);    //Para pruebas **
            /*
            String origen = this.lamdaOrigen_txt.getText();
            String destinos = this.lamdaDestinos_txt.getText();
            System.out.println("transicion " + origen +  " " + destinos);
            ArrayList<String> destinosAux = (ArrayList<String>) autAux.añadirEstadosDestino(destinos);
            autAux.agregarL_Transicion(origen, destinosAux);
            */
        } catch (Exception e) {
            System.out.println("error al introducir la transicion");
            //Logger.getLogger(VentanaAFND.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_botonAñadirTransicionActionPerformed

    private void boton_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_guardarActionPerformed
        try {
            nombreFichero = nuevoFicheroNombre_text.getText();
            gf.guardarAutomataAFND(autAux, nombreFichero);
            imprimirEnJTableAFNDConLambda(jTable1, autAux);
            System.out.println(autAux);    //Para pruebas**
        } catch (IOException ex) {
            Logger.getLogger(VentanaAFND.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_boton_guardarActionPerformed

    private void boton_comprobarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_comprobarActionPerformed
        try {
            String cadena = this.cadena_text.getText();
            System.out.println("cadena: " + cadena);

            if (automataCargado) {
                if (aut.reconocer(cadena)) {
                    System.out.println("Pertenece al automata\n");
                } else {
                    System.out.println("NO pertenece\n");
                }
            } else {
                if (autAux.reconocer(cadena)) {
                    System.out.println("Pertenece al automata\n");
                } else {
                    System.out.println("NO pertenece\n");
                }
            }

        } catch (Exception e) {
            System.out.println("error al leer la cadena");
            Logger.getLogger(VentanaAFND.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_boton_comprobarActionPerformed

    private void transicionSimbolo_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transicionSimbolo_textActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_transicionSimbolo_textActionPerformed

    private void boton_lamdaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_lamdaActionPerformed
        try {
            String origen = this.lamdaOrigen_txt.getText();
            String destinos = this.lamdaDestinos_txt.getText();
            System.out.println("transicion " + origen +  " " + destinos);
            ArrayList<String> destinosAux = (ArrayList<String>) autAux.añadirEstadosDestino(destinos);
            autAux.agregarL_Transicion(origen, destinosAux);
        } catch (Exception e) {
            System.out.println("error al introducir la transicion");
            //Logger.getLogger(VentanaAFND.class.getName()).log(Level.SEVERE, null, e);
        }                          
    }//GEN-LAST:event_boton_lamdaActionPerformed

    private void lamdaOrigen_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lamdaOrigen_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lamdaOrigen_txtActionPerformed

    // Clase para redirigir la salida estándar al JTextPane
    private static class CustomOutputStream extends OutputStream {

        private JTextPane textPane;

        public CustomOutputStream(JTextPane textPane) {
            this.textPane = textPane;
        }

        @Override
        public void write(int b) {
            StyledDocument doc = textPane.getStyledDocument();
            Style style = textPane.getStyle(StyleContext.DEFAULT_STYLE);
            try {
                doc.insertString(doc.getLength(), String.valueOf((char) b), style);
            } catch (BadLocationException e) {
                e.printStackTrace();
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaAFND.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaAFND.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaAFND.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaAFND.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaAFND().setVisible(true);
            }
        });
    }
    // Este método imprimirá la información en el JTable para un AFND con transiciones lambda
public void imprimirEnJTableAFNDConLambda(javax.swing.JTable jTable, AFND automata) {
    // Obtén el modelo de la tabla
    DefaultTableModel model = (DefaultTableModel) jTable.getModel();

    // Limpia el contenido actual de la tabla
    model.setRowCount(0);
    model.setColumnCount(0);

    // Agrega las columnas (símbolos)
    model.addColumn("-");
    for (String simbolo : automata.getSimbolos()) {
        model.addColumn(simbolo);
    }
    model.addColumn("λ");

    // Agrega las filas (estados)
    for (int i = 0; i < automata.getEstados().size(); i++) {
        String estado = automata.getEstados().get(i);

        // Crea un array para contener los datos de la fila
        Object[] rowData = new Object[automata.getSimbolos().size() + 2];

        // Rellena los datos de la fila usando el método transicion
        rowData[0] = (i == 0) ? estado + "+" : (automata.getEstadosFinales().contains(estado) ? estado + "*" : estado);
        for (int j = 0; j < automata.getSimbolos().size(); j++) {
            // Obtiene los destinos para el estado y símbolo dados
            ArrayList<String> destinos = automata.transicion(estado, automata.getSimbolos().get(j));

            // Convierte la lista de destinos a una cadena para mostrar en la celda
            String destinosStr = destinos.isEmpty() ? "" : String.join(", ", destinos);
            rowData[j + 1] = (destinos.equals("M")) ? destinos : (automata.getEstadosFinales().contains(destinos) ? destinos + "*" : destinosStr);
        }

        // Agrega las transiciones lambda en la última columna
        ArrayList<String> lambdaDestinos = automata.transicionLambda(estado);
        rowData[rowData.length - 1] = (lambdaDestinos.isEmpty()) ? "." : String.join(", ", lambdaDestinos);

        // Agrega la fila al modelo de la tabla
        model.addRow(rowData);
    }

    // Configura el modelo actualizado en la tabla
    jTable.setModel(model);
    // Cambiar el color de la tabla si es necesario
    // jTable.setDefaultRenderer(Object.class, new EstadoTableCellRenderer());
}
/*
// Este método imprimirá la información en el JTable para un AFND
public void imprimirEnJTableAFND(javax.swing.JTable jTable, AFND automata) {
    // Obtén el modelo de la tabla
    DefaultTableModel model = (DefaultTableModel) jTable.getModel();

    // Limpia el contenido actual de la tabla
    model.setRowCount(0);
    model.setColumnCount(0);

    // Agrega las columnas (símbolos)
    model.addColumn("-");
    for (String simbolo : automata.getSimbolos()) {
        model.addColumn(simbolo);
    }

    // Agrega las filas (estados)
    for (int i = 0; i < automata.getEstados().size(); i++) {
        String estado = automata.getEstados().get(i);

        // Crea un array para contener los datos de la fila
        Object[] rowData = new Object[automata.getSimbolos().size() + 1];

        // Rellena los datos de la fila usando el método transicion
        rowData[0] = (i == 0) ? estado + "+" : (automata.getEstadosFinales().contains(estado) ? estado + "*" : estado);
        for (int j = 0; j < automata.getSimbolos().size(); j++) {
            // Obtiene los destinos para el estado y símbolo dados
            ArrayList<String> destinos = automata.transicion(estado, automata.getSimbolos().get(j));

            // Convierte la lista de destinos a una cadena para mostrar en la celda
            String destinosStr = destinos.isEmpty() ? "" : String.join(", ", destinos);
            rowData[j + 1] = (destinos.equals("ERROR")) ? destinos : (automata.getEstadosFinales().contains(destinos) ? destinos + "*" : destinosStr);
        }

        // Agrega la fila al modelo de la tabla
        model.addRow(rowData);
    }

    // Configura el modelo actualizado en la tabla
    jTable.setModel(model);
    // Cambiar el color de la tabla si es necesario
    // jTable.setDefaultRenderer(Object.class, new EstadoTableCellRenderer());
}
*/
    class MyTableModel extends DefaultTableModel {

        public MyTableModel(Object[] columnNames, int rowCount) {
            super(columnNames, rowCount);
        }

        @Override
        public boolean isCellEditable(int row, int column) {
            return false; // Hacer que las celdas no sean editables
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAñadirEstadoInicial;
    private javax.swing.JButton botonAñadirEstados;
    private javax.swing.JButton botonAñadirEstadosFinales;
    private javax.swing.JButton botonAñadirTransicion;
    private javax.swing.JButton boton_comprobar;
    private javax.swing.JButton boton_guardar;
    private javax.swing.JButton boton_lamda;
    private javax.swing.JTextField cadena_text;
    private javax.swing.JButton cargar_nombre;
    private javax.swing.JTextField estadoInicial_text;
    private javax.swing.JTextField estadosFinales_txt;
    private javax.swing.JTextField estados_text;
    private javax.swing.JTextField introducir_nombre;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField lamdaDestinos_txt;
    private javax.swing.JTextField lamdaOrigen_txt;
    private javax.swing.JTextField nuevoFicheroNombre_text;
    private javax.swing.JTextPane texto;
    private javax.swing.JTextField transicionDestinos_texto;
    private javax.swing.JTextField transicionOrigen_txt;
    private javax.swing.JTextField transicionSimbolo_text;
    // End of variables declaration//GEN-END:variables
}
